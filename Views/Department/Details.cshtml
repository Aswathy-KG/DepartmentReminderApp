@model DepartmentReminderApp.Models.Department

@{
    ViewData["Title"] = "Department Details";
}

<h2 class="my-4">Department Details</h2>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">@Model.DepartmentName</h4>
        <dl class="row mt-3">
            <dt class="col-sm-3">
                <strong>Department Name:</strong>
            </dt>
            <dd class="col-sm-9">
                @Model.DepartmentName
            </dd>
            <dt class="col-sm-3">
                <strong>Department Logo:</strong>
            </dt>
            <dd class="col-sm-9">
                @if (!string.IsNullOrEmpty(Model.DepartmentLogo))
                {
                    <img src="~/uploads/@Model.DepartmentLogo" alt="Logo" class="img-thumbnail" style="width:100px;height:100px;" />
                }
            </dd>
            <dt class="col-sm-3">
                <strong>Parent Department:</strong>
            </dt>
            <dd class="col-sm-9">
                @Model.ParentDepartment?.DepartmentName ?? ""
            </dd>
        </dl>
    </div>
</div>

<div class="card mt-4">
    <div class="card-body">
        <h4 class="card-title">Sub-Departments</h4>
        @if (Model.SubDepartments.Any())
        {
            <ul class="list-group">
                @foreach (var subDept in Model.SubDepartments)
                {
                    <li class="list-group-item">@subDept.DepartmentName</li>
                }
            </ul>
        }
        else
        {
            <p>No sub-departments available.</p>
        }
    </div>
</div>

<div class="card mt-4">
    <div class="card-body">
        <h4 class="card-title">All Parent Departments</h4>
        @if (GetParentDepartments(Model).Any())
        {
            <ul class="list-group">
                @foreach (var parent in GetParentDepartments(Model))
                {
                    <li class="list-group-item">@parent.DepartmentName</li>
                }
            </ul>
        }
        else
        {
            <p>No parent departments available.</p>
        }
    </div>
</div>

<div class="mt-4">
    <a asp-action="Edit" asp-route-id="@Model.DepartmentId" class="btn btn-primary">
        <i class="fas fa-edit"></i> Edit
    </a>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to List
    </a>
</div>

@functions {
    IEnumerable<DepartmentReminderApp.Models.Department> GetParentDepartments(DepartmentReminderApp.Models.Department department)
    {
        var parentDepartments = new List<DepartmentReminderApp.Models.Department>();
        var parent = department.ParentDepartment;
        while (parent != null)
        {
            parentDepartments.Add(parent);
            parent = parent.ParentDepartment;
        }
        parentDepartments.Reverse(); // Reverse the list to get top-level first
        return parentDepartments;
    }
}
